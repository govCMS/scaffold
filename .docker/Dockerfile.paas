##
# @see  https://govcms.gov.au/wiki-advanced#docker
#

ARG CLI_IMAGE
ARG GOVCMS_IMAGE_VERSION={{ GOVCMS_VERSION }}.x-latest

FROM govcms/govcms:${GOVCMS_IMAGE_VERSION}

ARG GOVCMS_GITHUB_TOKEN

ENV WEBROOT=web

# Clean up base image so as not to conflict with any changes.
RUN mv /app/web/sites/all/modules /scaffold_modules \
  && rm -rf /app

RUN composer config --global github-oauth.github.com $GOVCMS_GITHUB_TOKEN

COPY composer.* /app/
COPY scripts /app/scripts
COPY custom /app/custom

# Run composer. Additional `rm`s can be added to reduce the image size, with diminishing returns.
RUN composer install --no-dev --no-interaction --no-suggest \
  && mkdir -p /app/web/sites/all \
  && mv /scaffold_modules /app/web/sites/all/modules \
  && rm -rf ~/.composer/cache \
  && rm -rf /app/web/core/tests \
  && rm -rf /app/web/modules/contrib/webform/tests

# Place remaining files from repository, note exclusions in .dockerignore.
COPY . /app

# Set up Drush aliases.
COPY .docker/config/cli/govcms.site.yml /app/drush/sites/

# Remove Drush 8 in /home/.composer.
RUN rm -Rf /home/.composer/vendor/bin
ENV PATH="/app/vendor/bin:${PATH}"

# Sanitize the Drupal install to remove potentially
# harmful files from the built image.
COPY .docker/scripts/sanitize.sh /tmp/sanitize.sh
RUN chmod +x /tmp/sanitize.sh \
  && /tmp/sanitize.sh \
  && rm /tmp/sanitize.sh
